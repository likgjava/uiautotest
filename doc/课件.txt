

appium环境搭建

1、安装JDK
版本：1.7
下载地址：http://www.oracle.com/technetwork/java/javase/downloads/java-archive-downloads-javase7-521261.html
配置环境变量：
JAVA_HOME=C:\Program Files\Java\jdk1.7.0_80
在Path中添加:%JAVA_HOME%\bin;

2、安装IDEA
官网：https://www.jetbrains.com/



3、安装Android SDK
配置环境变量：
ANDROID_HOME=D:\software\Android\Sdk
在Path中添加:%ANDROID_HOME%\tools;%ANDROID_HOME%\platform-tools;

4、安装Genymotion
1）打开Genymotion官网：https://www.genymotion.com/ 
2）注册
3）下载地址：https://www.genymotion.com/download/
注意事项：
1、最好不要改变VirtualBox的安装路径
1、enabled in BIOS settings



http://download.virtualbox.org/virtualbox/5.1.30/VirtualBox-5.1.30-118389-Win.exe



异常：Failure [INSTALL_FAILED_NO_MATCHING_ABIS]
原因：Genymotion出现这个情况需要安装补丁包。原因是某些应用使用了原生库（NDK，Native Lib）因为这些库的编译目标通常是arm的cpu，在x86上运行就会报这样的错误。
具体解决办法如下：
下载Genymotion-ARM-Translation_v1.1.zip，直接拖入genymotion模拟器窗口，直到提示成功。


异常：Genymotion unfortunately has stopped
genymotion 6.0的 arm 兼容包，拖进去，处理完成后点OK，再关闭模拟器重启一下就可以了。







4、安装nodejs
下载地址：https://nodejs.org/en/download/


5、安装appium
appium有两种安装模式:
通过客户端安装
通过终端安装

区别：
做自动化肯定不可能只是在一台机器上做自动化，因为那样的意义并不是很大，所以很多时候我们都是链接多台电脑去执行，但是appium去链接多台电脑时就需要启动多个appium的服务，如果说你安装是通过客户端去安装的，你链接多台机器就需要启动多次，配置多次，这样对你电脑本身也是一个性能考验。如果你是通过终端命令安装的在启动的时候你只需要通过命令启动多个服务就好。

appium客户端安装：
官方下载：http://appium.io/


appium终端安装：
1）直接在终端输入命令：npm install -g appium 一般不会成功，有防火墙
2）通过国内镜像安装：npm -registry http://registry.cnpmjs.org install -g appium
3）通过cnpm安装：
npm install -g cnpm --registry=https://registry.npm.taobao.org
cnpm install -g appium

npm与cnpm
npm（node package manager）是nodejs的包管理器，用于node插件管理（包括安装、卸载、管理依赖等）
1.安装插件：npm install <name> [-g] [--save-dev]
<name>：node插件名称。 
例：npm install appium --save-dev
-g：全局安装。 
将会安装在C:\Users\Administrator\AppData\Roaming\npm，并且写入系统环境变量；非全局安装：将会安装在当前定位目录；全局安装可以通过命令行在任何地方调用它，本地安装将安装在定位目录的node_modules文件夹下，通过require()调用；
--save：将保存配置信息至package.json（package.json是nodejs项目配置文件）；
-dev：保存至package.json的devDependencies节点，不指定-dev将保存至dependencies节点；
2.卸载插件：npm uninstall <name> [-g] [--save-dev] 
PS：不要直接删除本地插件包 
3.更新插件：npm update <name> [-g] [--save-dev] 
4.更新全部插件：npm update [--save-dev] 
5.查看npm帮助：npm help 
6.查看当前目录已安装插件：npm list


说明：因为npm安装插件是从国外服务器下载，受网络影响大，可能出现异常，所以我们乐于分享的淘宝团队干了这事。
官方网址：http://npm.taobao.org
安装：npm install cnpm -g --registry=https://registry.npm.taobao.org
注意：
1.安装完后最好查看其版本号cnpm -v或关闭命令提示符重新打开，安装完直接使用有可能会出现错误
2.cnpm跟npm用法完全一致，只是在执行命令时将npm改为cnpm。 





5、appium的hello world
示例效果：通过程序自动安装“知乎”APP到手机中，启动APP并模拟左右滑动来切换页面。


6、appium日志分析

============================================================================================================================
Android知识讲解
1、ADB工具
简介
ADB的全称为Android Debug Bridge，字面意思就是安卓调试桥接，简单点说就是一个调试工具。它是Android系统提供的一套工具，通过它我们可以在电脑上建立一个连接到手机的通道，然后可以在电脑上向手机发送一些指令，完成一些我们需要做的工作。

ADB常用命令
1、adb devices 查看已经连接的android设备
2、adb install Baidu.apk 将指定的apk文件安装到设备上
3、adb uninstall Baidu.apk 这个是卸载应用
4、adb shell 这个命令将登录设备的shell.后面加将是直接运行设备命令， 相当于执行远程命令

2、UIAutomatorViewer工具
UIAutomatorViewer是一个定位工具，在Android SDK目录下的tools/bin目录下。
我们打开定位工具、模拟器后直接点击定位工具左上角红色圈出的按钮（获取当前屏幕）UIAutomatorViewer会自动获取到当前模拟器所打开的页面。
最左边的区域就是捕获的模拟器页面，在该页面鼠标移到你要查找的元素上面，在整个区域右面上面就是当前对象的一个布局结构，能够清晰的看见他是采用的是什么布局。右下角的区域就是我们需要定位的对象的属性值


3、Package及Activity讲解
Package可以理解为APP的命名空间，是APP的唯一标示。我们在做APP自动化时，就需要知道他的Package，通过Package就可以定位到是哪个APP了。

Activity是Android组件中最基本也是最为常见用的四大组件之一。和用户进行交互的，每当用户打开app进行操作的时候会发现在不断的跳页面，其实每个页面就是一个activity。我们做自动化时拿到了这个app的Package，但是我们还不能启动起来，因为我们没有告诉需要去操作哪一个Activity，因此在这个时候我们需要讲app启动时的Activity写入到启动参数中，如果你传入一个其他页面的是不行的。

如何获取package及activity
获取package和activity的方法，在网上说了有很多种，这里我只给大家说我们常用的。
1、询问开发人员
2、

3、通过android sdk工具来，在sdk里面有一个工具，叫做aapt，我们可以直接通过这个工具来，在命令行输入：
aapt dump badging xxxx.apk,后面这个xxx.apk文件是我们aok所在的绝对路径，敲入之后那么可以显示出来相关信息，可以在里面仔细找了，packageName、lanuchActivity这两个关键字。



============================================================================================================================

学习DesiredCapabilities
简介
DesiredCapabilities 携带了一些配置信息，在启动session的时候是必须提供，如启动模式、apk/app配置、package/activity配置、浏览器配置、键盘配置等。

关键字
DesiredCapabilities的重要作用是在启动时传递信息给Appium Server。
下表中列举了Appium常用的 DesiredCapabilities 关键字。



============================================================================================================================


滑动
1.页面滑动
手机坐标原理图：

滑动时开始位置和结束位置要在屏幕内，不能超出屏幕，但手机分不同分辨率，我们的代码就得兼容不同分辨率的手机，因此我们首先要获得手机分辨率，才能确定我们手指的位置。手指的位置不要离屏幕边缘太近。
获取屏幕分辨率
Dimension dimension = driver.manage().window().getSize();

获取X轴最大值和Y轴最大值。
int x = dimension.getWidth();
int y = dimension.getHeight();

滑动屏幕在appium中使用到的方法是：
driver.swipe(int startx, int starty, int endx, int endy, int duration);

这时我们需要考虑滑屏的开始位置和结束位置，


通过上图，我们可以知道，左右滑动时Y轴不变，上下滑动时，X轴不变。那么我们就可以将不变值定为屏幕中间的位置，即x / 2或 y / 2.
滑动的区间可以设置为从9/10的位置滑到1/10的位置。通过计算最终可适用全部手机。duration表示滑动时间，毫秒，数值越小滑动越快。
从上往下滑动
driver.swipe(x/2, y/10, x/2, y*9/10, 500);
从下往上滑动
driver.swipe(x/2, y*9/10, x/2, y/10, 500);
从左往右滑
driver.swipe(x/10, y/2, x*9/10, y/2, 500);
从右往左滑
driver.swipe(x*9/10, y/2, x/10, y/2, 500);


2.元素滑动
--------------------------------------------------------------

元素点击
1).单击
单击方式有四个。下面分别写个示例，如何定位就不写了，常见的点击是click()方法，不过手机最好用TouchAction来点击。
element.click();
element.tap(1, 300);
driver.tap(1, element, 300);
new TouchAction(driver).tap(element).release().perform();


2).多击

3).长按
new TouchAction(driver).longPress(element).release().perform();
new TouchAction(driver).longPress(element, 100).release().perform();

--------------------------------------------------------------
输入框操作
element.sendKeys("1234中国");
driver.pressKeyCode(AndroidKeyCode.KEYCODE_A); // 字母“a”
driver.pressKeyCode(AndroidKeyCode.DEL);


--------------------------------------------------------------
下拉框操作

--------------------------------------------------------------
屏幕放大缩小









http://blog.csdn.net/wukuy123/article/details/73744784



问题记录：
Android 怎么获取 INJECT_EVENTS（小米手机）
http://blog.csdn.net/zhaoqi5705/article/details/53455597


cnpm与npm的区别
http://blog.csdn.net/chi1130/article/details/72773278




资源
http://www.cnblogs.com/fnng/p/4540731.html
https://anikikun.gitbooks.io/appium-girls-tutorial/content/download_fulu.html 









